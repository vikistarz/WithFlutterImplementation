plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def keyStoreProperties = new Properties()
def keyStorePropertiesFile = rootProject.file('local.properties')
if (keyStorePropertiesFile.exists()) {
        keyStoreProperties.load(new FileInputStream(keyStorePropertiesFile))
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.0'
}

android {
    namespace "com.example.cross_platform_application"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }



    signingConfigs{
        release{
            keyAlias keyStoreProperties['keyAlias']
            keyPassword keyStoreProperties['keypassword']
            storeFile keyStoreProperties['storeFile'] ? file(keyStoreProperties['storeFile']) : null
            storePassword keyStoreProperties['storePassword']
        }
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.cross_platform_application"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 24
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {

            // Enable shrinking, obfuscation, and optimization
            minifyEnabled true

            // Use R8 for code shrinking (enabled by default in new projects)
            shrinkResources true

            // Specify the ProGuard rules file (R8 also uses ProGuard rules)
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            signingConfig signingConfigs.release
        }
    }
}

buildscript {
    dependencies {
        // Check for the latest stable version and update if necessary
        classpath 'com.android.tools.build:gradle:7.5.0' // or newer
    }
}

flutter {
    source '../..'
}
